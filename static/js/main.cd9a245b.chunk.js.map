{"version":3,"sources":["assets/laugh.png","history.js","components/Menu.js","actions/jokeAction.js","components/RandomJoke.js","components/Header.js","components/Home.js","actions/groupActions.js","components/Form.js","components/NewGroup.js","components/Joke.js","components/Jokes.js","components/JokesContainer.js","components/JokeUpvote.js","components/JokeDownvote.js","components/Collection.js","components/CollectionsContainer.js","components/Groups.js","components/GroupContainer.js","App.js","serviceWorker.js","reducers/groupReducer.js","reducers/jokeReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","createBrowserHistory","Nav","react_default","a","createElement","Menu","color","inverted","stackable","react_router_dom","to","Item","header","Dropdown","item","className","requestConfig","method","headers","Content-Type","x-rapidapi-host","x-rapidapi-key","useQueryString","fetchJokes","dispatch","fetch","then","response","json","data","type","payload","selectJoke","joke","RandomJoke","this","props","fetchRandomJoke","_this","jokeOfDay","Container","textAlign","Header","as","content","renderJokeOfDay","Component","connect","state","jokes","HomeHeader","icon","src","Laugh","alt","Home","components_Header","Message","floating","components_RandomJoke","Button","Link","fetchGroups","groups","console","log","setGroup","id","concat","group","deleteGroup","addJokeToGroupCollections","selectedJoke","body","JSON","stringify","removeJokeFromGroupCollections","reduxForm","form","validate","formValues","errors","title","description","renderInput","formProps","input","label","meta","error","touched","Object","assign","autoComplete","_ref","renderError","Form","onSubmit","handleSubmit","alert","history","push","Field","name","component","createGroup","components_Form","currentGroup","bindActionCreators","handleClick","Segment","key","Content","Popup","trigger","basic","onClick","on","position","Jokes","allJokes","Icon","Grid","Row","columns","map","index","Column","Card","Group","Description","extra","components_Joke","JokesContainer","style","marginTop","Divider","components_Jokes","JokeUpvote","count","setState","prevState","labelPosition","pointing","JokeDownvote","collections","components_JokeUpvote","components_JokeDownvote","CollectionsContainer","components_Collection","Groups","event","target","value","_this2","mapGroupsForDropdown","allGroups","centered","width","onChange","e","handleChange","chosengroup","fluid","Meta","GroupInfo","GroupContainer","components_Groups","App","react_router","components_Menu","exact","path","NewGroup","Boolean","window","location","hostname","match","initialState","loading","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread","find","formReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","es","src_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd9a245b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/laugh.ada2c653.png\";","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory(); ","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Menu, Dropdown } from 'semantic-ui-react'\n\n// functional stateless component\nconst Nav = () =>\n  <Menu color=\"green\" inverted stackable>\n    <Link to=\"/\" ><Menu.Item header>Jokes</Menu.Item></Link>\n    <Link to=\"/groups\" ><Menu.Item>Pick A Group</Menu.Item></Link>\n\n    <Dropdown item>\n      <Dropdown.Menu>\n        <Dropdown.Item><Link to=\"/new\" className=\"dropdownLink\">Create A Group</Link></Dropdown.Item>\n        <Dropdown.Item><Link to=\"/all\" className=\"dropdownLink\">All Jokes</Link></Dropdown.Item>\n        <Dropdown.Item><Link to=\"/collections\" className=\"dropdownLink\">Collections</Link></Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  </Menu>\n\nexport default Nav\n","import fetch from 'isomorphic-fetch'\n\nconst API_BASE_URL = 'https://joke3.p.rapidapi.com/v1/joke';\nconst API_KEY = 'c3c1143e7bmshff008c0cd95d032p1752b3jsn6d33464deb05';\n\nconst requestConfig = {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    \"x-rapidapi-host\": \"joke3.p.rapidapi.com\",\n\t  \"x-rapidapi-key\": API_KEY,\n\t  \"useQueryString\": true\n  }\n};\n\nexport const fetchRandomJoke = () => {\n  return dispatch => {\n    fetch(API_BASE_URL, requestConfig)\n      .then(response => response.json())\n      .then(data => {\n        dispatch({\n          type:'FETCH_JOKE_OF_THE_DAY',\n          payload: data\n        })\n      })\n  }\n}\n\nexport default function fetchJokes() {\n  return (dispatch) => {\n    fetch(`https://jokesproject.herokuapp.com/api/jokes`)\n    .then(response => response.json())\n    .then(data => {\n      return dispatch(getJokesAsync(data))});\n  }\n}\n\nfunction getJokesAsync(jokes){\n  return {\n    type: 'FETCH_JOKES',\n    payload: jokes\n  };\n}\n\n\nexport const selectJoke = (joke) => {\n  return dispatch => {\n    dispatch({\n      type: 'JOKE_SELECTED',\n      payload: joke\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Header } from 'semantic-ui-react'\n\nimport { fetchRandomJoke } from '../actions/jokeAction'\n\nclass RandomJoke extends Component {\n  componentDidMount() {\n    this.props.fetchRandomJoke();\n  }\n\n\n  render() {\n    const renderJokeOfDay = () => {\n      if (this.props.jokeOfDay) {\n        return (\n          <Container textAlign='center'>\n            <Header as='h2'>\n              \"{this.props.jokeOfDay.content}\"\n            </Header>\n          </Container>\n        )}\n    }\n\n    return (\n      <div>{renderJokeOfDay()}</div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    jokeOfDay: state.jokes.jokeOfDay\n  }\n}\n\nexport default connect(mapStateToProps, { fetchRandomJoke })(RandomJoke);\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nimport Laugh from '../assets/laugh.png';\n\n// functional stateless component\nconst HomeHeader = () => {\n\treturn(\n\t\t<div>\n\t\t\t<Header as='h2' icon textAlign='center'>\n\t\t\t<img src={Laugh} alt=\"laugh\" className=\"largeLaugh\" />\n\n\t\t\t</Header>\n\n\t\t</div>\n\t)\n}\n\nexport default HomeHeader\n","import React from 'react'\nimport { Container, Message, Button } from 'semantic-ui-react'\nimport  RandomJoke  from '../components/RandomJoke'\nimport Header from '../components/Header'\nimport { Link } from 'react-router-dom';\n\n// functional stateless compoennt\nconst Home = () => {\n  return (\n    <Container className=\"extraContent\">\n      <Header/>\n\n      <Message floating>\n        <RandomJoke />\n      </Message>\n\n      <Button as={Link} to=\"/groups\" color='green'>View All Groups!</Button>\n    </Container>\n  )\n}\n\nexport default Home\n","import fetch from 'isomorphic-fetch'\n\n\nexport const createGroup = (formValues) => {\n  console.log('C');\n  let data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ group: formValues })\n  }\n\n  return dispatch => {\n    fetch(`https://jokesproject.herokuapp.com/api/groups`, data)\n      .then(response => response.json())\n      .then(group => {\n        console.log('D');\n        dispatch({\n              type: 'CREATE_GROUP',\n              payload: group\n            })})\n  }\n\n}\n  export const fetchGroups = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_GROUPS' })\n      return fetch('https://jokesproject.herokuapp.com/api/groups')\n      .then(response => {\n        return response.json()\n      }).then(groups => {\n        console.log('hit', groups);\n        return dispatch({ type: 'FETCH_GROUPS', payload: groups })\n      })\n    }\n  }\n\n  export const setGroup = id => {\n  console.log(id)\n  let data = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  return dispatch => {\n    fetch(`https://jokesproject.herokuapp.com/api/groups/${id}`, data)\n    .then(response => {\n      return response.json()\n    }).then (group => {\n      return dispatch({\n        type: 'SET_GROUP',\n        payload: group\n      })\n    })\n  }\n}\n\nexport const deleteGroup = group => {\n  return dispatch => {\n    fetch('https://jokesproject.herokuapp.com/api/groups/' + group.id, {\n            method: \"DELETE\",\n            headers: {\n            'Content-Type': 'application/json'\n        }\n      })\n      .then(response => dispatch({ type: 'DELETE_GROUP', payload: group }));\n    }\n};\n\nexport const addJokeToGroupCollections = (selectedJoke, group) => {\n  let id = group.id\n  let data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ joke: selectedJoke })\n  }\n\n  return dispatch => {\n    fetch(`https://jokesproject.herokuapp.com/api/groups/${id}/add_to_collections`, data)\n      .then(response => response.json())\n      .then(jokes => dispatch({\n        type: 'ADD_TO_COLLECTIONS',\n        payload: jokes\n      }))\n  }\n}\n\n\nexport const removeJokeFromGroupCollections = (selectedJoke, group) => {\n  let id = group.id\n  let data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ joke: selectedJoke })\n  }\n\n  return dispatch => {\n    fetch(`https://jokesproject.herokuapp.com/api/groups/${id}/remove_from_collections`, data)\n      .then(response => response.json())\n      .then(jokes => dispatch({\n        type: 'REMOVE_FROM_COLLECTIONS',\n        payload: jokes\n      }))\n  }\n}\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Container, Form, Button } from 'semantic-ui-react'\nimport history from '../history';\n\n// functional stateless component\nconst GroupForm = (props) => {\n\n    const renderError = ({error, touched}) => {\n        if(touched && error){\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    const renderInput = (formProps) => {\n        const { input, label, meta } = formProps;\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n            return (\n                <div className={className}>\n                    <label>{label}</label>\n                    <input {...input} autoComplete=\"off\" />\n                    <div>{renderError(meta)}</div>\n                </div>\n            );\n    }\n\n    const onSubmit = (formValues) => {\n        console.log('A');\n        props.onSubmit(formValues);\n        console.log('B');\n        alert('Group created')\n        history.push('/')\n    };\n\n\n        return (\n            <Container>\n                <Form\n                    onSubmit={props.handleSubmit(onSubmit)}>\n                    <Field name=\"title\" component={renderInput} label=\"Enter title: \" />\n                    <Field name=\"description\" component={renderInput} label=\"Enter descripiton: \" />\n\n                    <Button color=\"green\">Submit</Button>\n                </Form>\n            </Container>\n        );\n    }\n\nconst validate = (formValues) => {\n    const errors = {};\n    if(!formValues.title){\n    errors.title = 'You must enter a title';\n    }\n    if(!formValues.description){\n    errors.description = 'You must enter a description';\n    }\n    return errors;\n};\n\nexport default reduxForm({\nform: 'GroupForm',\nvalidate\n})(GroupForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Header } from 'semantic-ui-react'\nimport { createGroup } from '../actions/groupActions'\nimport Form from './Form';\n\n// functional stateless component\nconst NewGroup = (props) => {\n\n\tconst onSubmit = formValues => {\n\t\tprops.createGroup(formValues);\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Header>Create a Group</Header>\n\t\t\t<Form onSubmit={onSubmit} />\n\t\t</Container>\n\t);\n}\n\nexport default connect(null, { createGroup })(NewGroup);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Item, Button, Popup, Segment } from 'semantic-ui-react'\nimport { bindActionCreators } from 'redux';\n\nimport { addJokeToGroupCollections } from '../actions/groupActions';\nimport history from '../history';\n\n// functional stateless component\nconst Joke = (props) => {\n\n  const handleClick = () => {\n    props.addJokeToGroupCollections(props.selectedJoke, props.currentGroup)\n    history.push('/collections')\n  }\n\n  const renderJokeDetail = () => {\n    if (props.selectedJoke) {\n      return (\n        <Segment textAlign='center'>\n          <Item key={props.selectedJoke.id}>\n            <Item.Content>\n              <Item.Header as='h3'>{props.selectedJoke.content}</Item.Header>\n\n              <br />\n\n              <Popup\n                trigger={<Button basic color='green' onClick={handleClick} content=\"Add to Collection\"/>}\n                content={`Added!`}\n                on='click'\n                position='top right'\n              />\n\n            </Item.Content>\n          </Item>\n        </Segment>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <div>{renderJokeDetail()}</div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentGroup: state.group.currentGroup,\n    selectedJoke: state.jokes.selectedJoke\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addJokeToGroupCollections\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Joke)\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Button, Icon, Header, Popup, Card, Grid } from 'semantic-ui-react'\nimport fetchJokes from '../actions/jokeAction';\n\nimport { selectJoke } from '../actions/jokeAction'\nimport Joke from './Joke'\n\n\nclass Jokes extends Component {\n\n  componentDidMount() {\n    this.props.fetchJokes();\n  }\n\n    render() {\n      if (this.props.allJokes) {\n        return (\n          <div>\n            <Header as='h2'>\n              <Icon name='group alternate' />\n\n              <Header.Content>\n                Available Jokes\n              </Header.Content>\n            </Header>\n\n            <Grid>\n              <Grid.Row columns={3}>\n                {this.props.allJokes.map((joke, index) =>\n                  <Grid.Column className=\"column\">\n                    <Card.Group>\n                      <Card className=\"jokeCard\">\n                        <Card.Content>\n                          <Card.Description>\n                            {joke.content}\n                          </Card.Description>\n                        </Card.Content>\n\n                        {this.props.currentGroup && <Card.Content extra className=\"extraContent\">\n                          <Popup\n                            trigger={<Button color=\"green\" onClick={() => this.props.selectJoke(joke)} content=\"View Joke\"/>}\n                            content={<Joke />}\n                            on='click'\n                            position='top right'\n                          />\n                        </Card.Content>}\n                      </Card>\n                    </Card.Group>\n                  </Grid.Column>\n                )}\n              </Grid.Row>\n            </Grid>\n\n            <div>Please select a group first to add a joke in your collection.</div>\n          </div>\n        )\n      }\n\n      return (\n        <div>No jokes available</div>\n      )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentGroup: state.group.currentGroup,\n    allJokes: state.jokes.allJokes\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\nfetchJokes,\nselectJoke\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jokes)\n","import React from 'react'\nimport { Divider, Container } from 'semantic-ui-react'\n\nimport Jokes from '../components/Jokes';\nimport Header from '../components/Header'\n\n// functional stateless compoennt\nconst JokesContainer = (props) => {\n  return (\n    <Container style={{ marginTop: '30px' }}>\n      <Header />\n      <Divider />\n      <Jokes />\n    </Container>\n  );\n}\n\nexport default JokesContainer\n","import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\nclass JokeUpvote extends Component {\n  state = {\n    count: 0\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    }))\n  }\n\n  render() {\n    return (\n      <Button as='div' labelPosition='right'>\n        <Button\n          color='red'\n  \t      content='Upvote'\n  \t      icon='thumbs up'\n  \t      label={{ basic: true, color: 'red', pointing: 'left', content: this.state.count}}\n  \t      onClick={this.handleClick}\n        />\n      </Button>\n    )\n  }\n}\n\nexport default JokeUpvote\n","import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react'\n\nclass JokeDownvote extends Component {\n  state = {\n    count: 0\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    }))\n  }\n\n  render() {\n    return (\n      <Button as='div' labelPosition='right'>\n        <Button\n          color='blue'\n  \t      content='Downvote'\n  \t      icon='thumbs down'\n  \t      label={{ basic: true, color: 'blue', pointing: 'left', content: this.state.count}}\n  \t      onClick={this.handleClick}\n        />\n      </Button>\n    )\n  }\n}\n\nexport default JokeDownvote;\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { Container, Card, Button, Header, Icon, Grid } from 'semantic-ui-react'\nimport {connect} from 'react-redux'\n\nimport { removeJokeFromGroupCollections } from '../actions/groupActions'\nimport JokeUpvote from '../components/JokeUpvote';\nimport JokeDownvote from '../components/JokeDownvote'\n\n// functional stateless component\nconst Collection = (props) => {\n    if (props.currentGroup) {\n      return (\n        <Container>\n          <Header as='h2'>\n            <Icon name='group alternate' />\n\n            <Header.Content>\n              You are in Your \"{props.currentGroup.title}\" Group\n            </Header.Content>\n          </Header>\n\n          <Grid>\n            <Grid.Row columns={2}>\n            {props.currentGroup.collections.map((joke, index) =>\n              <Grid.Column className=\"column\">\n              <Card key={joke.id} className=\"collectionJokeCard\">\n                <Card.Content>\n                  <Card.Description className=\"collectionJokeDescription\">{joke.content}</Card.Description>\n                </Card.Content>\n\n                <Card.Content extra className=\"extraContent\">\n                  <Button.Group>\n                    <JokeUpvote />\n                    <JokeDownvote />\n                    <Button onClick={() => props.removeJokeFromGroupCollections(joke, props.currentGroup)}>\n                      Remove Joke\n                    </Button>\n                  </Button.Group>\n                </Card.Content>\n              </Card>\n              </Grid.Column>\n            )}\n          </Grid.Row>\n        </Grid>\n        </Container>\n      )\n    }\n\n    return(\n     <div>You must select a group first!</div>\n    )\n\n  }\n\nconst mapStateToProps = (state) => {\n  return {\n    currentGroup: state.group.currentGroup,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\nremoveJokeFromGroupCollections\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Collection)\n","import React from 'react'\nimport Collection from '../components/Collection';\nimport Header from '../components/Header'\nimport { Grid, Divider, Container } from 'semantic-ui-react'\n\n// functional stateless compoennt\nconst CollectionsContainer = () => {\n  return (\n    <Container style={{ marginTop: '30px' }}>\n      <Header />\n      <Divider />\n\n      <Grid >\n        <Grid.Column>\n          <Collection />\n        </Grid.Column>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default CollectionsContainer\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'\nimport { Link } from 'react-router-dom';\nimport { Grid, Button, Divider, Card } from 'semantic-ui-react';\n\nimport history from '../history';\nimport { deleteGroup } from '../actions/groupActions';\nimport { fetchGroups }  from '../actions/groupActions'\nimport { setGroup }  from '../actions/groupActions'\n\n\nclass Groups extends Component {\n  componentDidMount() {\n    this.props.fetchGroups()\n  }\n\n  handleChange(event) {\n    this.props.setGroup(event.target.value)\n  }\n\n  onClick = (currentGroup) => {\n    this.props.deleteGroup(this.props.currentGroup)\n    alert('Group deleted!')\n    history.push('/')\n  };\n\n  render() {\n    const mapGroupsForDropdown = this.props.allGroups.map((group, index) => {\n      return (\n        <option value={group.id} key={group.id} id={group.id}>\n          {group.title}\n        </option>\n      )\n    })\n\n    const GroupInfo = () => {\n      if (this.props.currentGroup) {\n        const chosengroup = this.props.currentGroup;\n\n        return (\n          <Card fluid className=\"groupDetails\">\n            <Card.Content>\n              <Card.Header as='h2' textAlign='center'>{chosengroup.title}\n                <Card.Meta content={chosengroup.description} />\n              </Card.Header>\n\n              <Card.Content className=\"extraContent\" >\n                <Button.Group>\n                  <Button as={Link} to=\"/all\" color='violet'>Add Jokes </Button>\n                  <Button as={Link} to=\"/collections\" color='green'>Collections</Button>\n                  <Button onClick={() => this.onClick()} color='red'>Delete Group</Button>\n                </Button.Group>\n              </Card.Content>\n            </Card.Content>\n          </Card>\n        )\n      }\n    }\n\n    return (\n      <div>\n        <Grid centered >\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <div className=\"ui centered card\">\n                <select onChange={(e) => this.handleChange(e)}>\n                  <option value=\"\">Select a Group</option>\n                  {mapGroupsForDropdown}\n                </select>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Divider />\n\n          <Grid.Row>\n            <Grid.Column width={12}>\n              <div>{GroupInfo()}</div>\n\n              <div className=\"extraContent\">\n                <Button.Group>\n                  <Button as={Link} to=\"/all\" color='green'>All Jokes</Button>\n                  <Button as={Link} to=\"/new\" color='green'>Create a Group</Button>\n                </Button.Group>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      allGroups: state.group.allGroups,\n      currentGroup: state.group.currentGroup\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  deleteGroup,\n  fetchGroups,\n  setGroup\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);\n","import React from 'react'\nimport { Container } from 'semantic-ui-react'\nimport  Groups  from '../components/Groups'\nimport Header from '../components/Header'\n\n// functional stateless compoennt\nconst GroupContainer = () => {\n\treturn (\n\t\t<Container>\n\t\t\t<Header/>\n\t\t\t<Groups/>\n\t\t</Container>\n\t)\n}\n\nexport default GroupContainer\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport history from './history';\nimport Nav from './components/Menu'\nimport Home from './components/Home'\nimport NewGroup from './components/NewGroup'\nimport JokesContainer from './components/JokesContainer'\nimport CollectionsContainer from './components/CollectionsContainer'\nimport GroupContainer from './components/GroupContainer'\n\n// functional compoennt\nconst App = () => (\n  <Router history={history}>\n    <Nav />\n\n    <Switch>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/new\" component={NewGroup} />\n      <Route exact path=\"/groups\" component={GroupContainer} />\n      <Route exact path=\"/all\" component={JokesContainer}/>\n      <Route exact path=\"/collections\" component={CollectionsContainer}/>\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\nconst initialState = {\n  loading: false,\n  allGroups: [],\n  currentGroup: null,\n}\n\nexport default function groupReducer(state = initialState, action) {\n  switch(action.type) {\n    case 'LOADING_GROUPS':\n      return { ...state, loading: true}\n    case 'CREATE_GROUP':\n      return { ...state, group: action.payload };\n    case 'FETCH_GROUPS':\n      return { ...state, loading: false, allGroups: action.payload}\n      case 'DELETE_GROUP':\n      return {...state, currentGroup: null, loading: false }\n    case 'RETRIEVING_SELECTED_GROUP':\n      return { ...state, loading: true }\n    case 'SET_GROUP':\n      return { ...state, currentGroup: state.allGroups.find(group => group.id === action.payload.id) }\n    case 'ADD_TO_COLLECTIONS':\n      return { ...state, currentGroup: {...state.currentGroup, collections: action.payload }}\n    case 'REMOVE_FROM_COLLECTIONS':\n      return { ...state, currentGroup: {...state.currentGroup, collections: action.payload }}\n    default: return state\n  }\n}\n","const initialState = {\n  loading: false,\n  selectedJoke: null,\n  jokeOfDay: null,\n  allJokes: [],\n}\n\nexport default function jokeReducer(state = initialState, action) {\n  switch(action.type) {\n    case 'FETCH_JOKE_OF_THE_DAY':\n      return { ...state, loading: false, jokeOfDay: action.payload}\n    case 'LOADING_JOKES':\n      return { ...state, loading: true }\n    case 'FETCH_JOKES':\n      return { ...state, loading: false, allJokes: action.payload }\n    case 'JOKE_SELECTED':\n      return { ...state, loading: false, selectedJoke: action.payload }\n    default: return state\n  }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport groupReducer from './groupReducer'\nimport jokeReducer from './jokeReducer'\n\nconst rootReducer = combineReducers({\n  group: groupReducer,\n  form: formReducer,\n  jokes: jokeReducer\n\n})\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n\nimport reduxThunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport './index.css';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(reduxThunk))\n\n);\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n\n    < App />\n\n  </Provider>,\n  document.querySelector('#root')\n)\n\nexport default store;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}